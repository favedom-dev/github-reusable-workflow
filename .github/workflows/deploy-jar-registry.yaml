name: Deploy jar registry

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      NAME:  # name of service, (ex: peeq-tracking)
        required: true
        type: string
      VERSION:
        required: true
        type: string
      JDK_VERSION:
        default: 21
        required: false
        type: number
      JDK_DISTRIBUTION:
        default: 'temurin'
        required: false
        type: string
      MVN_ARGS:
        default: 'clean deploy'
        required: false
        type: string
      MAVEN_WORKING_DIR:
        default: '.'
        required: false
        type: string
      MAVEN_SETTINGS_URL:
        default: 'https://raw.githubusercontent.com/favedom-dev/github-reusable-workflow/master/.m2'
        required: false
        type: string
      PROJECT_ID:
        default: 'favedom-dev'
        required: false
        type: string
      GAR_LOCATION:
        default: 'us-central1'
        required: false
        type: string
      GAR_MAVEN_URL:
        default: 'https://console.cloud.google.com/artifacts/maven/'
        required: false
        type: string
      MAVEN_REGISTRY:
        default: 'java'
        required: false
        type: string
      JAR_PATH:
        default: 'com.velocityz'
        required: false
        type: string
      SCAN_JAR:
        default: './target/*.jar'
        required: false
        type: string
      VCS_PREFIX_CORRECTION:
        default: 'src/main/java'
        required: false
        type: string


    secrets:
      GH_TOKEN:
        required: true
      WIF_PROVIDER:
        required: true
      WIF_SERVICE_ACCOUNT:
        required: true
      SHIFTLEFT_ACCESS_TOKEN:
        required: false

jobs:

  deploy-jar-registry:
    timeout-minutes: 15
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:

      - name: "üîß Setup variables"
        id: setup-variables
        run: |
          GAR_URL="${{ inputs.GAR_MAVEN_URL }}${{ inputs.PROJECT_ID }}/${{ inputs.GAR_LOCATION }}/${{ inputs.MAVEN_REGISTRY }}/${{ inputs.JAR_PATH }}:${{ inputs.NAME }}/${{ inputs.VERSION }}?project=${{ inputs.PROJECT_ID }}"
          echo "GAR_URL : ${GAR_URL}"
          echo "GAR_URL=${GAR_URL}" >> $GITHUB_ENV
          echo "GAR_URL=${GAR_URL}" >> $GITHUB_OUTPUT

          ARTIFACT_REGISTRY="artifactregistry://${{ inputs.GAR_LOCATION }}-maven.pkg.dev/${{ inputs.PROJECT_ID }}/${{ inputs.MAVEN_REGISTRY }}"
          echo "ARTIFACT_REGISTRY : ${ARTIFACT_REGISTRY}"
          echo "ARTIFACT_REGISTRY=${ARTIFACT_REGISTRY}" >> $GITHUB_ENV
          echo "ARTIFACT_REGISTRY=${ARTIFACT_REGISTRY}" >> $GITHUB_OUTPUT

          MVN_ARG_ARTIFACT_REGISTRY="-Dartifact.registry=${ARTIFACT_REGISTRY}"
          echo "MVN_ARG_ARTIFACT_REGISTRY : ${MVN_ARG_ARTIFACT_REGISTRY}"
          echo "MVN_ARG_ARTIFACT_REGISTRY=${MVN_ARG_ARTIFACT_REGISTRY}" >> $GITHUB_ENV
          echo "MVN_ARG_ARTIFACT_REGISTRY=${MVN_ARG_ARTIFACT_REGISTRY}" >> $GITHUB_OUTPUT

      - name: "‚òÅÔ∏è Checkout repository"
        uses: actions/checkout@v4

      - name: "üîß Google Auth Token"
        if: ${{ !env.ACT }}
        id: auth-gcp-token
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: "üîß Set up JDK ${{ inputs.JDK_VERSION }} ${{ inputs.JDK_DISTRIBUTION }}"
        uses: actions/setup-java@v4
        with:
          java-version: '${{ inputs.JDK_VERSION }}'
          distribution: '${{ inputs.JDK_DISTRIBUTION }}'

      - name: "üîß Maven ~/.m2/settings.xml"
        run: |
          wget ${{ inputs.MAVEN_SETTINGS_URL }}/settings.xml
          envsubst < ./settings.xml > ~/.m2/settings.xml

      - name: "üî® Maven set version"
        working-directory: ${{ inputs.MAVEN_WORKING_DIR }}
        run: |
          mvn -B versions:set -DnewVersion=${{ inputs.VERSION }}

      - name: "üî® Build with Maven"
        working-directory: ${{ inputs.MAVEN_WORKING_DIR }}
        env:
          MVN_ARG_ARTIFACT_REGISTRY: ${{ steps.setup-variables.outputs.MVN_ARG_ARTIFACT_REGISTRY }}
        run: |
          mvn -B ${{ inputs.MVN_ARGS }} ${MVN_ARG_ARTIFACT_REGISTRY}

      - name: "üåê Link to Lib"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GAR_URL: ${{ steps.setup-variables.outputs.GAR_URL }}
        run: |-
          echo "${GAR_URL}"
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            gh pr comment ${{ github.event.number }} \
            --body "üì¶ JAR Lib: [${{ inputs.NAME }} ${{ inputs.VERSION }}](${GAR_URL})"
          fi

      - name: Download Qwiet CLI
        if: ${{ env.SHIFTLEFT_ACCESS_TOKEN != '' }}
        env:
          SHIFTLEFT_ACCESS_TOKEN: ${{ secrets.SHIFTLEFT_ACCESS_TOKEN }}
        run: |
          curl https://cdn.shiftleft.io/download/sl > $HOME/sl && chmod a+rx $HOME/sl

      # https://docs.shiftleft.io/cli/reference/analyze
      - name: Qwiet Analyze with NextGen Static Analysis
        if: ${{ env.SHIFTLEFT_ACCESS_TOKEN != '' }}
        env:
          SHIFTLEFT_ACCESS_TOKEN: ${{ secrets.SHIFTLEFT_ACCESS_TOKEN }}
        run: |
          $HOME/sl analyze \
          --app ${{ inputs.NAME }} \
          --java \
          --vcs-prefix-correction "*=${{ inputs.VCS_PREFIX_CORRECTION }}" \
          --cpg \
          ${{ inputs.SCAN_JAR }}
