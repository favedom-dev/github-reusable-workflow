name: Qwiet

on:  # yamllint disable-line rule:truthy
  workflow_call:

    inputs:
      NAME:  # name of service, (ex: peeq-tracking)
        required: true
        type: string
      ARG_LANGUAGE:
        default: '--js'
        required: false
        type: string
      ARG_STANDARD:
        default: '--cpg'
        required: false
        type: string
      SCAN_DIR:
        default: './'
        required: false
        type: string
      VCS_PREFIX_CORRECTION:
        default: ''
        required: false
        type: string

    secrets:
      GH_TOKEN:  # GitHub token
        required: true
      SHIFTLEFT_ACCESS_TOKEN:
        required: true
      DRATA_API_KEY:
        required: true

jobs:

  qwiet:
    # timeout-minutes: 15
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    outputs:
      scan_id: ${{ steps.analyze.outputs.scan_id }}
      scan_url: ${{ steps.analyze.outputs.scan_url }}
    steps:

      - name: "☁️ Checkout repository"
        uses: actions/checkout@v3

      - name: Download Qwiet CLI
        run: |
          curl https://cdn.shiftleft.io/download/sl > $HOME/sl && chmod a+rx $HOME/sl

      # https://docs.shiftleft.io/cli/reference/analyze
      - id: analyze
        name: Qwiet Analyze with NextGen Static Analysis
        env:
          SHIFTLEFT_ACCESS_TOKEN: ${{ secrets.SHIFTLEFT_ACCESS_TOKEN }}
        run: |
          $HOME/sl analyze \
          --app ${{ inputs.NAME }} \
          ${{ inputs.ARG_LANGUAGE }} \
          ${{ inputs.ARG_STANDARD }} \
          ${{ inputs.VCS_PREFIX_CORRECTION }} \
          ${{ inputs.SCAN_DIR }} | tee qwiet-analysis.log

          SCAN_ID=$(grep -im 1 -E 'The Scan ID for application ' qwiet-analysis.log | grep -om 1 -E '[0-9]+$')
          echo "Scan ID: $SCAN_ID"

          if [[ "${SCAN_ID}" =~ ^[0-9]+$ ]]; then
              echo "Scan ID: $SCAN_ID"
              echo "scan_id=$SCAN_ID" >> $GITHUB_OUTPUT
          elif [[ -z "$SCAN_ID" ]]; then
              echo "No scan ID found"
              exit 1
          else
              echo "Scan ID found, but is not a number: $SCAN_ID"
              exit 1
          fi

          SCAN_URL="https://app.shiftleft.io/apps/${{ inputs.NAME }}/summary?scan=$SCAN_ID"
          echo "Scan URL: $SCAN_URL"
          echo "scan_url=$SCAN_URL" >> $GITHUB_OUTPUT

      - name: Upload Qwiet Analyze Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: qwiet-analysis.log
          path: qwiet-analysis.log

  drata:
    runs-on: ubuntu-latest
    needs: qwiet
    steps:
      - name: "Upload External Evidence"
        env:
          DRATA_API_KEY: ${{ secrets.DRATA_API_KEY }}
          SCAN_ID: ${{ needs.qwiet.outputs.scan_id }}
          SCAN_URL: ${{ needs.qwiet.outputs.scan_url }}
          WORKSPACE_ID: '1'
        run: |
          # Get current date and time
          CREATION_DATE=$(date '+%Y-%m-%d 12:00:00.000000')

          # Get the date 3 months from now without the time
          RENEWAL_DATE=$(date -d '+3 months' '+%Y-%m-%d')

          # Get Vulnerability Management control (code: DCF-183)
          curl -X GET -G https://public-api.drata.com/public/controls \
              -H "Authorization: Bearer ${DRATA_API_KEY}" \
              -d "q=DCF-183" \
              -d "isArchived=false" \
              -o controls.json

          TOTAL_CONTROLS=$(jq '.total' controls.json)
          echo "Total controls: ${TOTAL_CONTROLS}"

          CONTROL_ID=$(jq '.data[0].id' controls.json)
          echo "Control ID: ${CONTROL_ID}"

          curl -X POST "https://public-api.drata.com/public/workspaces/${WORKSPACE_ID}/controls/${CONTROL_ID}/external-evidence" \
              -H "Authorization: Bearer ${DRATA_API_KEY}" \
              -H "Content-Type: multipart/form-data" \
              -H "Accept: application/json" \
              --form "filename=\"Qwiet ${{ inputs.NAME }} ${SCAN_ID}\"" \
              --form "url=\"${SCAN_URL}\"" \
              --form "description=\"Github Action\"" \
              --form "creationDate=\"${CREATION_DATE}\"" \
              --form "renewalDate=\"${RENEWAL_DATE}\"" \
              --form "renewalScheduleType=\"THREE_MONTHS\""
