name: Maven and Docker

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      NAME:  # name of service, (ex: peeq-tracking)
        required: true
        type: string
      VERSION:
        required: true
        type: string
      APP_WORKING_DIR:  # -DmyVariable=someValue
        default: '.'
        required: false
        type: string
      MVN_ENV_VARS:  # -DmyVariable=someValue
        required: false
        type: string
      MVN_ARGS:
        default: 'clean install'
        required: false
        type: string
      MVN_ARGS_EXTRA:
        required: false
        type: string
      DOCKERFILE_FILE:
        default: './Dockerfile'
        required: false
        type: string
      TAG2:
        default: 'latest'
        required: false
        type: string
      PROJECT_ID:
        default: 'favedom-dev'
        required: false
        type: string
      GAR_LOCATION:
        default: 'us-central1'
        required: false
        type: string
      DOCKER_REGISTRY:
        default: 'peeq-docker'
        required: false
        type: string
      CREATE_CREDENTIALS_FILE:
        default: true
        required: false
        type: boolean
      EXPORT_ENVIRONMENT_VARIABLES:
        default: true
        required: false
        type: boolean
      RUN_GCP_JSON_KEY:
        default: false
        required: false
        type: boolean

    secrets:
      GH_TOKEN:
        required: true
      WIF_PROVIDER:  # Workload Identity Federation Provider
        required: true
      WIF_SERVICE_ACCOUNT:  # Workload Identity Federation Service Account
        required: true
      MVN_ARGS_SECRETS:
        required: false
      GCP_JSON_KEY:
        required: false

jobs:

  maven-docker:
    timeout-minutes: 15
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:

      - name: "üîß Setup variables"
        id: setup-variables
        run: |
          DOCKER_LOCATION=${{ inputs.GAR_LOCATION }}-docker.pkg.dev/${{ inputs.PROJECT_ID }}/${{ inputs.DOCKER_REGISTRY }}/${{ inputs.NAME }}
          echo "DOCKER_LOCATION : ${DOCKER_LOCATION}"
          echo "DOCKER_LOCATION=${DOCKER_LOCATION}" >> $GITHUB_ENV
          echo "DOCKER_LOCATION=${DOCKER_LOCATION}" >> $GITHUB_OUTPUT
          DOCKER_URL="https://console.cloud.google.com/artifacts/docker/${{ inputs.PROJECT_ID }}/${{ inputs.GAR_LOCATION }}/${{ inputs.DOCKER_REGISTRY }}/${{ inputs.NAME }}?project=${{ inputs.PROJECT_ID }}/"
          echo "DOCKER_URL : ${DOCKER_URL}"
          echo "DOCKER_URL=${DOCKER_URL}" >> $GITHUB_ENV
          echo "DOCKER_URL=${DOCKER_URL}" >> $GITHUB_OUTPUT

      - name: "‚òÅÔ∏è Checkout repository"
        uses: actions/checkout@v3

      - name: "üîß Google Auth Token"
        if: ${{ !env.ACT }}
        id: auth-gcp-token
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'
          create_credentials_file: ${{ inputs.CREATE_CREDENTIALS_FILE }}
          export_environment_variables: ${{ inputs.EXPORT_ENVIRONMENT_VARIABLES }}

      - name: "üîß Google Auth JSON Key"
        id: auth-gcp-key
        if: inputs.RUN_GCP_JSON_KEY
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_JSON_KEY }}'

      # https://github.com/google-github-actions/setup-gcloud
      # - name: 'Set up Cloud SDK'
      #   uses: 'google-github-actions/setup-gcloud@v0'

      - name: "üîß Docker Auth"
        if: ${{ !env.ACT }}
        id: auth-docker
        uses: 'docker/login-action@v2'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth-gcp-token.outputs.access_token }}'
          registry: '${{ inputs.GAR_LOCATION }}-docker.pkg.dev'  # Google Artifact Registry

      - name: "üîß Set up JDK 11"
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: "üîß Maven ~/.m2/settings.xml"
        run: |
          wget https://raw.githubusercontent.com/favedom-dev/github-reusable-workflow/master/.m2/settings.xml
          envsubst < ./settings.xml > ~/.m2/settings.xml

      - name: "üî® Maven set version"
        working-directory: ${{ inputs.APP_WORKING_DIR }}
        env:
          VERSION: ${{ inputs.VERSION }}
        run: |
          mvn -B versions:set -DnewVersion=${VERSION}

      - name: "üî® Build with Maven"
        working-directory: ${{ inputs.APP_WORKING_DIR }}
        env:
          GCP_ACCESS_TOKEN: '${{ steps.auth-gcp-token.outputs.access_token }}'
          GCP_ACCESS_TOKEN_EXPIRATION: '${{ steps.auth-gcp-token.outputs.access_token_expiration }}'
        run: |
          echo "MVN_ARGS        : ${{ inputs.MVN_ARGS }}"
          echo "MVN_ENV_VARS    : ${{ inputs.MVN_ENV_VARS }}"
          echo "MVN_ARGS_EXTRA  : ${{ inputs.MVN_ARGS_EXTRA }}"
          echo "MVN_ARGS_SECRETS: ${{ secrets.MVN_ARGS_SECRETS }}"
          mvn -B \
          ${{ secrets.MVN_ARGS_SECRETS }} \
          ${{ inputs.MVN_ENV_VARS }} \
          ${{ inputs.MVN_ARGS }} \
          ${{ inputs.MVN_ARGS_EXTRA }}

      - name: "üîß Setup Docker tags"
        id: docker-tags
        working-directory: ${{ inputs.APP_WORKING_DIR }}
        env:
          # DOCKER_LOCATION: ${{ inputs.GAR_LOCATION }}-docker.pkg.dev/${{ inputs.PROJECT_ID }}/${{ inputs.DOCKER_REGISTRY }}/${{ inputs.NAME }}
          DOCKER_LOCATION: ${{ steps.setup-variables.outputs.DOCKER_LOCATION }}
        run: |-
          DOCKER_TAGS=${{ env.DOCKER_LOCATION }}:${{ inputs.VERSION }}
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            DOCKER_TAGS=$DOCKER_TAGS,${{ env.DOCKER_LOCATION }}:latest
            # echo "IF: DOCKER_TAGS: $DOCKER_TAGS"
          fi
          echo "DOCKER_TAGS: $DOCKER_TAGS"
          echo "tags=$DOCKER_TAGS" >> $GITHUB_OUTPUT

      - name: "üê≥ Docker: build, tag, and push"
        uses: docker/build-push-action@v3
        if: ${{ !env.ACT }}
        with:
          context: ${{ inputs.APP_WORKING_DIR }}
          file: ${{ env.DOCKERFILE_FILE }}
          push: true
          tags: ${{ steps.docker-tags.outputs.tags }}

      - name: "üåê Link to Container"
        if: ${{ !env.ACT }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          DOCKER_URL: ${{ steps.setup-variables.outputs.DOCKER_URL }}
# yamllint disable rule:line-length
        run: |-
          echo "${DOCKER_URL}"
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            gh pr comment ${{ github.event.number }} \
            --body "üê≥ Container: [${{ inputs.NAME }} ${{ inputs.VERSION }}](${DOCKER_URL})"
          fi
# yamllint enable rule:line-length
