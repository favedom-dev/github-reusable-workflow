name: pnpm docker

on:
  workflow_call:
    inputs:
      NAME: # name of service, (ex: peeq-tracking)
        required: true
        type: string
      VERSION:
        required: true
        type: string
      TAG2:
        default: 'latest'
        required: false
        type: string
      PROJECT_ID:
        default: 'favedom-dev'
        required: false
        type: string
      GAR_LOCATION:
        default: 'us-central1'
        required: false
        type: string
      GCR_LOCATION:
        default: 'gcr.io'
        required: false
        type: string
      DOCKER_REGISTRY:
        default: 'docker'
        required: false
        type: string
    secrets:
      GH_TOKEN: # GitHub token
        required: true
      WIF_PROVIDER: # Workload Identity Federation Provider
        required: true
      WIF_SERVICE_ACCOUNT: # Workload Identity Federation Service Account
        required: true

jobs:

  pnpm-docker:
    timeout-minutes: 15
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:

      - name: "üîß Setup variables"
        id: setup-variables
        run: |
          DOCKER_LOCATION=${{ inputs.GAR_LOCATION }}-docker.pkg.dev/${{ inputs.PROJECT_ID }}/${{ inputs.DOCKER_REGISTRY }}/${{ inputs.NAME }}
          echo "DOCKER_LOCATION : ${DOCKER_LOCATION}"
          echo "DOCKER_LOCATION=${DOCKER_LOCATION}" >> $GITHUB_ENV
          echo "DOCKER_LOCATION=${DOCKER_LOCATION}" >> $GITHUB_OUTPUT
          DOCKER_URL="https://console.cloud.google.com/artifacts/docker/${{ inputs.PROJECT_ID }}/${{ inputs.GAR_LOCATION }}/${{ inputs.DOCKER_REGISTRY }}/${{ inputs.NAME }}?project=${{ inputs.PROJECT_ID }}/"
          echo "DOCKER_URL : ${DOCKER_URL}"
          echo "DOCKER_URL=${DOCKER_URL}" >> $GITHUB_ENV
          echo "DOCKER_URL=${DOCKER_URL}" >> $GITHUB_OUTPUT

      - name: checkout repo
        uses: actions/checkout@v4

      - name: setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: pnpm

      - name: install dependencies
        run: pnpm install

      - name: "üîß Google Auth"
        if: ${{ !env.ACT }}
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: "üîß Docker Auth"
        if: ${{ !env.ACT }}
        id: docker-auth
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ inputs.GAR_LOCATION }}-docker.pkg.dev' # Google Artifact Registry

      - name: "Setup Docker tags"
        id: docker-tags
        env:
          DOCKER_LOCATION: ${{ steps.setup-variables.outputs.DOCKER_LOCATION }}
        run: |-
          DOCKER_TAGS=${{ env.DOCKER_LOCATION }}:${{ inputs.VERSION }}
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            DOCKER_TAGS=$DOCKER_TAGS,${{ env.DOCKER_LOCATION }}:latest
            echo "2 DOCKER_TAGS: $DOCKER_TAGS"
          fi
          echo "3 DOCKER_TAGS: $DOCKER_TAGS"
          echo "::set-output name=tags::$DOCKER_TAGS"

      - name: "üê≥ Docker: build, tag, and push"
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./packages/api/Dockerfile
          push: true
          tags: ${{ steps.docker-tags.outputs.tags }}

      - name: "üåê Link to Container"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          DOCKER_URL: ${{ steps.setup-variables.outputs.DOCKER_URL }}
        run: |-
          echo "${DOCKER_URL}"
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            gh pr comment ${{ github.event.number }} \
            --body "üê≥ Container: [${{ inputs.NAME }} ${{ inputs.VERSION }}](${DOCKER_URL})"
          fi
