name: Deploy Environment

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      NAME:
        required: true
        type: string
      VERSION:
        required: true
        type: string
      MONOREPO_APP:
        default: ''
        required: false
        type: string
      ARGOCD_APP_NAME:
        required: false
        type: string
      ENV_REPO_NAME:
        default: 'favedom-dev/argocd-deployments'
        required: false
        type: string
      ENV_REPO_PATH:
        default: 'env-repo'
        required: false
        type: string
      ENV_REPO_SUBDIR_BASE:
        # default: 'dev/fanfuzenil' # TODO
        default: 'dev/tmp-fanfuze'
        required: false
        type: string
      ENV_REPO_SUBDIR:
        required: false
        type: string
      OVERRIDE_SUBDIR_NAME:
        required: false
        type: string
      DO_PR_MERGE:
        default: 'true'
        required: false
        type: string
      VERSION_SCRIPT_BASE_URL:
        default: 'https://raw.githubusercontent.com/favedom-dev/github-reusable-workflow/'
        required: false
        type: string
      VERSION_SCRIPT_BRANCH:
        default: 'v2'
        required: false
        type: string
      VERSION_SCRIPT_DIR:
        default: '.github/scripts'
        required: false
        type: string
      VERSION_SCRIPT_NAME:
        default: 'update-values-tag.sh'
        required: false
        type: string
      YAML_FILE:
        default: 'values.yaml'
        required: false
        type: string
      # YAML_ELEMENT:
      #   default: 'dependencies'
      #   required: false
      #   type: string
      #   description: "When VERSION_SCRIPT_NAME is null"
      # YAML_UPDATE_ELEMENT:
      #   default: 'version'
      #   required: false
      #   type: string
      #   description: "When VERSION_SCRIPT_NAME is null"
      # REGISTRY_PROTOCOL:
      #   default: 'oci'
      #   required: false
      #   type: string
      # REGISTRY:
      #   default: 'us-central1-docker.pkg.dev'
      #   required: false
      #   type: string
      #   description: "Override REGISTRY in VERSION_SCRIPT_NAME=[update_tag.sh || update_image.sh]"
      # REPOSITORY:
      #   default: 'favedom-dev/docker'
      #   required: false
      #   type: string
      #   description: "Override REPOSITORY in VERSION_SCRIPT_NAME=[update_tag.sh || update_image.sh]"
      # ROOT_ELEMENT:
      #   required: false
      #   type: string
      #   description: "Override ROOT_ELEMENT in VERSION_SCRIPT_NAME=[update_tag.sh || update_image.sh]"
      # SUB_ELEMENT:
      #   required: false
      #   type: string
      #   description: "Override SUB_ELEMENT in VERSION_SCRIPT_NAME=update_tag.sh"
      # BASE_ELEMENT:
      #   required: false
      #   type: string
      #   description: "Override BASE_ELEMENT in VERSION_SCRIPT_NAME=update_tag.sh"

      GH_USER_EMAIL:
        default: 'github@powervz.com'
        required: false
        type: string
      GH_USER_NAME:
        default: 'PowerVZ GitHub Bot'
        required: false
        type: string

    secrets:
      GH_TOKEN:
        required: true

jobs:

  deploy-environment:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:

      - name: "DEBUG: inputs"
        run: |
          echo "NAME                    : ${{ inputs.NAME }}"
          echo "VERSION                 : ${{ inputs.VERSION }}"
          echo "MONOREPO_APP            : ${{ inputs.MONOREPO_APP }}"
          echo "ARGOCD_APP_NAME         : ${{ inputs.ARGOCD_APP_NAME }}"
          echo "ENV_REPO_NAME           : ${{ inputs.ENV_REPO_NAME }}"
          echo "ENV_REPO_PATH           : ${{ inputs.ENV_REPO_PATH }}"
          echo "ENV_REPO_SUBDIR_BASE    : ${{ inputs.ENV_REPO_SUBDIR_BASE }}"
          echo "ENV_REPO_SUBDIR         : ${{ inputs.ENV_REPO_SUBDIR }}"
          echo "OVERRIDE_SUBDIR_NAME    : ${{ inputs.OVERRIDE_SUBDIR_NAME }}"
          echo "VERSION_SCRIPT_BASE_URL : ${{ inputs.VERSION_SCRIPT_BASE_URL }}"
          echo "VERSION_SCRIPT_BRANCH   : ${{ inputs.VERSION_SCRIPT_BRANCH }}"
          echo "VERSION_SCRIPT_DIR      : ${{ inputs.VERSION_SCRIPT_DIR }}"
          echo "VERSION_SCRIPT_NAME     : ${{ inputs.VERSION_SCRIPT_NAME }}"
          echo "YAML_FILE               : ${{ inputs.YAML_FILE }}"
          # echo "YAML_ELEMENT            : ${{ inputs.YAML_ELEMENT }}"
          # echo "YAML_UPDATE_ELEMENT     : ${{ inputs.YAML_UPDATE_ELEMENT }}"
          # echo "REGISTRY                : ${{ inputs.REGISTRY }}"
          # echo "REPOSITORY              : ${{ inputs.REPOSITORY }}"
          # echo "ROOT_ELEMENT            : ${{ inputs.ROOT_ELEMENT }}"
          # echo "SUB_ELEMENT             : ${{ inputs.SUB_ELEMENT }}"
          # echo "BASE_ELEMENT            : ${{ inputs.BASE_ELEMENT }}"

      - name: "🔧 Git config"
        if: github.ref == 'refs/heads/master'
        run: |
          git config --global user.email ""
          git config --global user.name "${{ inputs.GH_USER_NAME }}"

      - name: "☁️ Checkout environment repository: ${{ inputs.ENV_REPO_NAME }}"
        if: github.ref == 'refs/heads/master'
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.ENV_REPO_NAME }}
          token: ${{ secrets.GH_TOKEN }}
          ref: master
          path: ${{ inputs.ENV_REPO_PATH }}

      - name: "📜 Set ENV_REPO_SUBDIR"
        id: set-env-repo-subdir
        env:
          OVERRIDE_SUBDIR_NAME: ${{ inputs.OVERRIDE_SUBDIR_NAME }}
          SUBDIR_NAME: ${{ inputs.ARGOCD_APP_NAME }}
        run: |
          echo "SUBDIR_NAME         : ${SUBDIR_NAME}"
          echo "OVERRIDE_SUBDIR_NAME: ${OVERRIDE_SUBDIR_NAME}"
          if [ -n "${ENV_REPO_SUBDIR}" ]; then
            ENV_REPO_SUBDIR=${{ inputs.ENV_REPO_SUBDIR }}
            echo "if ENV_REPO_SUBDIR: ${ENV_REPO_SUBDIR}"
          else
            if [ -n "${OVERRIDE_SUBDIR_NAME}" ]; then
              SUBDIR_NAME=${{ inputs.OVERRIDE_SUBDIR_NAME }}
            fi
            ENV_REPO_SUBDIR=${{ inputs.ENV_REPO_SUBDIR_BASE }}/${SUBDIR_NAME}
            echo "else ENV_REPO_SUBDIR: ${ENV_REPO_SUBDIR}"
          fi
          echo "ENV_REPO_SUBDIR: ${ENV_REPO_SUBDIR}"
          echo "ENV_REPO_SUBDIR=${ENV_REPO_SUBDIR}" >> $GITHUB_OUTPUT

      - name: "PRE-update: ./${{ inputs.YAML_FILE }}"
        if: github.ref == 'refs/heads/master'
        working-directory: ${{ inputs.ENV_REPO_PATH }}/${{ steps.set-env-repo-subdir.outputs.ENV_REPO_SUBDIR }}
        run: |
          pwd
          cat ./${{ inputs.YAML_FILE }}

      - name: "Update ${{ inputs.ARGOCD_APP_NAME }} version ${{ inputs.VERSION }} in environment repo: ${{ inputs.YAML_FILE }}"
        if: github.ref == 'refs/heads/master'
        working-directory: ${{ inputs.ENV_REPO_PATH }}/${{ steps.set-env-repo-subdir.outputs.ENV_REPO_SUBDIR }}
        env:
          VERSION_SCRIPT_DIR_URL: ${{ inputs.VERSION_SCRIPT_BASE_URL }}/${{ inputs.VERSION_SCRIPT_BRANCH }}/${{ inputs.VERSION_SCRIPT_DIR }}
          VERSION_SCRIPT_NAME: ${{ inputs.VERSION_SCRIPT_NAME }}
          NAME: ${{ inputs.ARGOCD_APP_NAME }}
          VERSION: ${{ inputs.VERSION }}
          YAML_FILE: ${{ inputs.YAML_FILE }}
          # REGISTRY_PROTOCOL: ${{ inputs.REGISTRY_PROTOCOL }}
          # REGISTRY: ${{ inputs.REGISTRY }}
          # REPOSITORY: ${{ inputs.REPOSITORY }}
          # ROOT_ELEMENT: ${{ inputs.ROOT_ELEMENT }}
          # SUB_ELEMENT: ${{ inputs.SUB_ELEMENT }}
          # BASE_ELEMENT: ${{ inputs.BASE_ELEMENT }}
        run: |
          echo "Update values.yaml ${NAME}.image.tag"
          wget -O ./${VERSION_SCRIPT_NAME} ${VERSION_SCRIPT_DIR_URL}/${VERSION_SCRIPT_NAME}
          chmod 777 ./${VERSION_SCRIPT_NAME}
          ./${VERSION_SCRIPT_NAME} . "${NAME}" "${VERSION}"
          rm ./${VERSION_SCRIPT_NAME}
          echo ""
          echo "NOTE: MAY NEED TO EXPAND THIS!!!"

      - name: "Updated: ./${{ inputs.YAML_FILE }}"
        if: github.ref == 'refs/heads/master'
        working-directory: ${{ inputs.ENV_REPO_PATH }}/${{ steps.set-env-repo-subdir.outputs.ENV_REPO_SUBDIR }}
        run: |
          pwd
          cat ./${{ inputs.YAML_FILE }}

      - name: "🌐 Create environment PR in repo: ${{ inputs.ENV_REPO_NAME }}"
        if: github.ref == 'refs/heads/master'
        working-directory: ${{ inputs.ENV_REPO_PATH }}
        env:
          NAME: ${{ inputs.ARGOCD_APP_NAME }}
          VERSION: ${{ inputs.VERSION }}
          BRANCH_NAME: gha_${{ inputs.ARGOCD_APP_NAME }}_${{ inputs.VERSION }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          MONOREPO_APP: ${{ inputs.MONOREPO_APP }}
          DO_PR_MERGE: ${{ inputs.DO_PR_MERGE }}
        run: |
          git checkout -b ${BRANCH_NAME}
          git status
          git commit -a -m "${NAME} ${VERSION}"
          git push -u origin ${BRANCH_NAME}
          FULL_VERSION=v${VERSION}
          if [ ${#MONOREPO_APP} -gt 0 ]; then
            FULL_VERSION=${MONOREPO_APP}/${FULL_VERSION}
          fi
          gh release view ${FULL_VERSION} -R ${{ github.repository }} --json author,tagName,url,body --template \
          'Version: [{{.tagName}}]({{.url}})

          {{.body}}
          ' >> ./GH_RELEASE_NOTES.txt
          GH_BODY=$(cat ./GH_RELEASE_NOTES.txt)
          gh pr create --label "approved" --title "chore: bump ${NAME} to ${VERSION}" --body "${GH_BODY}"
          if [ "${DO_PR_MERGE}" = "true" ]; then
            gh pr merge ${BRANCH_NAME} --auto --squash
          fi
