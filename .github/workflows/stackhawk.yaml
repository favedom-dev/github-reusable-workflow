name: Stackhawk

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      NAME:  # name of service, (ex: peeq-tracking)
        required: true
        type: string
      NAMESPACE:
        required: true
        type: string
      API_PATH:
        required: true
        type: string
      TEST_USERNAME:
        default: 'stackhawk@velocityz.com'
        required: false
        type: string
      BASE_DOMAIN:
        default: 'dev.fanfuzenil.com'
        required: false
        type: string
      KEYCLOAK_REALM:
        default: 'fanfuzenil'
        required: false
        type: string
      HEALTH_PATH:
        default: 'actuator/health'
        required: false
        type: string
      HEALTH_RETRIES:
        default: 6
        required: false
        type: number
      HEALTH_RETRY_DELAY:
        default: 10
        required: false
        type: number
      CURL_ARGS:
        default: ''
        required: false
        type: string
      STACKHAWK_SLEEP_DELAY:
        required: false
        type: number
      STACKHAWK_SLEEP_DELAY_DEFAULT:
        default: 15
        required: false
        type: number
      STACKHAWK_SLEEP_DELAY_DEFAULT_JAVA:
        default: 30
        required: false
        type: number
      STACKHAWK_SETUP_SCRIPT_NAME:
        default: 'setup-stackhawk.sh'
        required: false
        type: string
      STACKHAWK_TMPL_YML:
        default: 'stackhawk-tmpl.yml'
        required: false
        type: string
      STACKHAWK_DIRECTORY:
        default: 'stackhawk'
        required: false
        type: string
      STACKHAWK_APP_ENV:
        default: 'Preview'
        required: false
        type: string
      STACKHAWK_DRYRUN:
        default: false
        required: false
        type: boolean
      STACKHAWK_DEBUG:
        default: true
        required: false
        type: boolean
      STACKHAWK_CODESCANNINGALERTS:
        default: true
        required: false
        type: boolean
      JOBS_TIMEOUT:
        default: 10
        required: false
        type: number

    secrets:
      GH_TOKEN:  # GitHub token
        required: true
      HAWK_API_KEY:
        required: true
      TEST_PASSWORD:  # stackhawk peeq TEST_USERNAME password
        required: true

jobs:

  stackhawk:
    timeout-minutes: ${{ inputs.JOBS_TIMEOUT }}
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:

#       - name: "SKIPPING Stackhawk"
#         run: |
#           echo "TODO: re-enable"

      - name: "☁️ Checkout repository"
        uses: actions/checkout@v4

      - name: "🔧 Setup stackhawk"
        working-directory: ${{ inputs.STACKHAWK_DIRECTORY }}
        env:
          SCRIPT_NAME: ${{ inputs.STACKHAWK_SETUP_SCRIPT_NAME }}
          APP_NAME: ${{ inputs.NAME }}
          APP_HOST: https://${{ inputs.NAMESPACE }}.${{ inputs.BASE_DOMAIN }}
          NAMESPACE: ${{ inputs.NAMESPACE }}
          API_PATH: ${{ inputs.API_PATH }}
          TEST_USERNAME: ${{ inputs.TEST_USERNAME }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
          KEYCLOAK_AUTH: https://identity.${{ inputs.BASE_DOMAIN }}/auth/realms/${{ inputs.KEYCLOAK_REALM }}/protocol/openid-connect/token
        run: |
          wget -O ${SCRIPT_NAME} https://raw.githubusercontent.com/favedom-dev/github-reusable-workflow/master/stackhawk/${SCRIPT_NAME}
          chmod 777 ./${SCRIPT_NAME}
          ./${SCRIPT_NAME}

      - name: "DEBUG: setup stackhawk"
        working-directory: ${{ inputs.STACKHAWK_DIRECTORY }}
        run: |
          cat ./stackhawk.yml

      - name: "Set Stackhawk sleep"
        id: 'set-stackhawk-sleep'
        working-directory: ${{ inputs.STACKHAWK_DIRECTORY }}
        env:
          STACKHAWK_SLEEP_DELAY: ${{ inputs.STACKHAWK_SLEEP_DELAY }}
          STACKHAWK_SLEEP_DELAY_DEFAULT: ${{ inputs.STACKHAWK_SLEEP_DELAY_DEFAULT }}
          STACKHAWK_SLEEP_DELAY_DEFAULT_JAVA: ${{ inputs.STACKHAWK_SLEEP_DELAY_DEFAULT_JAVA }}
        run: |
          if [ "${STACKHAWK_SLEEP_DELAY}" -gt 0 ]; then
            echo "Using STACKHAWK_SLEEP_DELAY : ${STACKHAWK_SLEEP_DELAY}"
          else
            STACKHAWK_SLEEP_DELAY="${STACKHAWK_SLEEP_DELAY_DEFAULT}"
            echo "Using STACKHAWK_SLEEP_DELAY_DEFAULT : ${STACKHAWK_SLEEP_DELAY}"
            if [ "$(yq -r '.app | has("graphqlConf")' ./stackhawk.yml)" = "true" ];then
              STACKHAWK_SLEEP_DELAY="${STACKHAWK_SLEEP_DELAY_DEFAULT_JAVA}"
              echo "Using STACKHAWK_SLEEP_DELAY_DEFAULT_JAVA : ${STACKHAWK_SLEEP_DELAY}"
            fi
          fi
          echo "STACKHAWK_SLEEP_DELAY : ${STACKHAWK_SLEEP_DELAY}"
          echo "STACKHAWK_SLEEP_DELAY=${STACKHAWK_SLEEP_DELAY}" >> $GITHUB_OUTPUT

      - name: "💓 Check that service is alive"
        env:
          APP_HOST: https://${{ inputs.NAMESPACE }}.${{ inputs.BASE_DOMAIN }}
          API_PATH: ${{ inputs.API_PATH }}
          HEALTH_PATH: ${{ inputs.HEALTH_PATH }}
          HEALTH_RETRIES: ${{ inputs.HEALTH_RETRIES }}
          HEALTH_RETRY_DELAY: ${{ inputs.HEALTH_RETRY_DELAY }}
          STACKHAWK_SLEEP_DELAY: ${{ steps.set-stackhawk-sleep.outputs.STACKHAWK_SLEEP_DELAY }}
        run: |
          sleep ${STACKHAWK_SLEEP_DELAY}
          echo "CHECKING: ${APP_HOST}${API_PATH}${HEALTH_PATH}"
          curl --fail --retry ${HEALTH_RETRIES} --retry-delay ${HEALTH_RETRY_DELAY} ${{ inputs.CURL_ARGS }} ${APP_HOST}${API_PATH}${HEALTH_PATH}

      - name: "🦅 Run Stackhawk (timeout ${{ inputs.JOBS_TIMEOUT }} minutes)"
        env:
          APP_HOST: https://${{ inputs.NAMESPACE }}.${{ inputs.BASE_DOMAIN }}
          # APP_ID: ${{ inputs.STACKHAWK_APP_ID }}
          APP_ENV: ${{ inputs.STACKHAWK_APP_ENV }}
        # uses: stackhawk/hawkscan-action@v2.0.0
        # https://github.com/stackhawk/hawkscan-action
        uses: stackhawk/hawkscan-action@v2
        with:
          apiKey: ${{ secrets.HAWK_API_KEY }}
          dryRun: ${{ inputs.STACKHAWK_DRYRUN }}
          workspace: ./${{ inputs.STACKHAWK_DIRECTORY }}
          debug: ${{ inputs.STACKHAWK_DEBUG }}
          # codeScanningAlerts: ${{ inputs.STACKHAWK_CODESCANNINGALERTS }}
          githubToken: ${{ secrets.GH_TOKEN }}
          configurationFiles: |
            stackhawk.yml
