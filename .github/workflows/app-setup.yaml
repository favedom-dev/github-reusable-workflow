name: App Setup

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      OVERRIDE_NAME:
        required: false
        type: string
      APPLICATION_FILE:
        default: 'src/main/resources/application.yaml'
        required: false
        type: string
      STACKHAWK_DIRECTORY:
        default: 'stackhawk'
        required: false
        type: string
    outputs:
      NAME:
        value: ${{ jobs.app-setup.outputs.NAME }}
      PR_NAMESPACE:
        value: ${{ jobs.app-setup.outputs.PR_NAMESPACE }}
      IS_STACKHAWK_READY:
        value: ${{ jobs.app-setup.outputs.IS_STACKHAWK_READY }}
      PQ_API_PATH:
        value: ${{ jobs.app-setup.outputs.PQ_API_PATH }}

jobs:

  app-setup:
    timeout-minutes: 1
    runs-on: ubuntu-latest
    outputs:
      NAME: ${{ steps.set-name.outputs.NAME }}
      PR_NAMESPACE: ${{ steps.set-name-pr-namespace.PR_NAMESPACE }}
      PQ_API_PATH: ${{ steps.get-api-path.PQ_API_PATH }}
      IS_STACKHAWK_READY: ${{ steps.stackhawk-ready-repo.IS_STACKHAWK_READY }}
    steps:

      - name: "Set Name"
        id: set-name
        env:
          OVERRIDE_NAME: ${{ inputs.OVERRIDE_NAME }}
        run: |
          NAME=${{ github.event.repository.name }}
          echo "OVERRIDE_NAME: ${OVERRIDE_NAME}"
          if [ -n "${OVERRIDE_NAME}" ]; then
            NAME=${{ inputs.OVERRIDE_NAME }}
          fi
          echo "::set-output name=NAME::${NAME}"

      - name: "Set Name for PR namespace"
        id: set-name-pr-namespace
        run: |
         echo "::set-output name=PR_NAMESPACE::pr-${{ inputs.NAME }}-${{ github.event.number }}"

      - name: "☁️ Checkout repository"
        uses: actions/checkout@v3

      - name: "Get API path"
        id: get-api-path
        env:
          APPLICATION_FILE: ${{ inputs.APPLICATION_FILE }}
        run: |
          PQ_API_PATH=""
          if [ -f "${APPLICATION_FILE}" ]; then
            PQ_API_PATH=$(grep "context-path:" ${APPLICATION_FILE} | awk '{print $2}')
          fi
          echo "PQ_API_PATH: ${PQ_API_PATH}"
          echo "::set-output name=PQ_API_PATH::${PQ_API_PATH}/"

      - name: "Stackhawk ready repo"
        id: stackhawk-ready-repo
        working-directory: ${{ inputs.STACKHAWK_DIRECTORY }}
        env:
          FILE: ${{ inputs.STACKHAWK_TMPL_YML }}
        run: |
          if [ -f "${FILE}" ]; then
            echo "${FILE} exists"
            IS_STACKHAWK_READY=true
          else
            echo "${FILE} does not exists"
            IS_STACKHAWK_READY=false
          fi
          echo "::set-output name=IS_STACKHAWK_READY::${IS_STACKHAWK_READY}"
