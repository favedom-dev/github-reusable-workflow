name: Deploy Environment

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      NAME:  # name of component, (ex: peeq-tracking)
        required: true
        type: string
      VERSION:
        required: true
        type: string
      ENV_NAME:
        default: 'staging'
        required: false
        type: string
      REPO_NAME:
        default: 'favedom-dev/environment-favedom-dev-staging'
        # default: 'favedom-dev/environment-?'  # Uncomment for Argo and set to repo
        required: false
        type: string
      REQUIREMENTS_FILE:
        # default: 'requirements.yaml'  # Uncomment for Argo
        default: 'helmfile.yaml'
        required: false
        type: string
    secrets:
      GH_TOKEN:  # GitHub token
        required: true

jobs:

  deploy-environment:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:

      - name: "TODO:"
        run: |
          echo "DEPLOY:"
          echo "======="
          echo "NAME    : ${{ inputs.NAME }}"
          echo "VERSION : ${{ inputs.VERSION }}"
          echo "ENV_NAME: ${{ inputs.ENV_NAME }}"
          echo "======="
          echo "STEPS:"
          echo "1. Git clone environment repo"
          echo "2. Update ++ENV_NAME++/${{ inputs.REQUIREMENTS_FILE }}"
          echo "3. Create PR (gh cli: https://cli.github.com/manual/gh_pr_create)"
          echo "  a. Add \"approved\" label (-l, --label \"approved\")"
          echo "  b. Add title "chore: bump https://github.com/favedom-dev/peeq-sms from 0.0.24 to 0.0.25 " (-t, --title <string>)"
          echo "  c. Maybe add the comment(s) from the merged pull request to the body (-b, --body <string>)"

      - name: "Git config"
        run: |
          git config --global user.email ""
          git config --global user.name "velocityz-0x-pq-github"

      - name: "☁️ Checkout environment repository"
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.REPO_NAME }}
          token: ${{ secrets.GH_TOKEN }}
          ref: master

      - name: "Update version in values.yaml"
        # working-directory: ${{ inputs.ENV_NAME }}  # Uncomment for Argo
        run: |
          yq \
          eval \
          --prettyPrint \
          "(.dependencies[] | select(has(\"name\")) | select(.name == \"${{ inputs.NAME }}\")).version = \"${{ inputs.VERSION }}\"" \
          -i ./${{ inputs.REQUIREMENTS_FILE }}

      - name: "DEBUG: ./${{ inputs.REQUIREMENTS_FILE }}"
        # working-directory: ${{ inputs.ENV_NAME }}  # Uncomment for Argo
        run: |
          cat ./${{ inputs.REQUIREMENTS_FILE }}

      - name: "Create environment PR"
        run: |
          echo "UNCOMMENT THIS SECTION"
          exit 1
          # git checkout -b ${{ inputs.NAME }}_${{ inputs.VERSION }}
          # git commit -a -m "${{ inputs.NAME }} ${{ inputs.VERSION }}"
          # git push -u origin ${{ inputs.NAME }}_${{ inputs.VERSION }}
          # gh pr create --label "approved" --title "chore: bump ${{ inputs.NAME }} to ${{ inputs.VERSION }}" --body "${{ inputs.NAME }} ${{ inputs.VERSION }}"
