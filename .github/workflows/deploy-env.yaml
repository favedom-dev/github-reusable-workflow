name: Deploy Environment

on:
  workflow_call:
    inputs:
      NAME: # name of component, (ex: peeq-tracking)
        required: true
        type: string
      VERSION:
        required: true
        type: string
      ENV_NAME:
        default: 'staging'
        required: false
        type: string
      REPO_NAME:
        default: 'favedom-dev/argocd-poc'
        required: false
        type: string
    secrets:
      GH_TOKEN: # GitHub token
        required: true

jobs:

  deploy-environment:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:

      - name: "TODO:"
        run: |
          echo "DEPLOY:"
          echo "======="
          echo "NAME    : ${{ inputs.NAME }}"
          echo "VERSION : ${{ inputs.VERSION }}"
          echo "ENV_NAME: ${{ inputs.ENV_NAME }}"
          echo "======="
          echo "STEPS:"
          echo "1. Git clone environment repo"
          echo "2. Update ++ENV_NAME++/requirements.yaml"
          echo "3. Create PR (gh cli: https://cli.github.com/manual/gh_pr_create)"
          echo "  a. Add \"approved\" label (-l, --label \"approved\")"
          echo "  b. Add title "chore: bump https://github.com/favedom-dev/peeq-sms from 0.0.24 to 0.0.25 " (-t, --title <string>)"
          echo "  c. Maybe add the comment(s) from the merged pull request to the body (-b, --body <string>)"

      # - name: "☁️ Checkout repository"
      #   uses: actions/checkout@v3
      #   with:
      #     repository: ${{ inputs.REPO_NAME }}

      # - name: "Update version in requirements.yaml"
      #   uses: mikefarah/yq@v4.6.3
      #   run: |
      #     cd ${{ inputs.ENV_NAME }}
      #     # yq eval "(.dependencies[] | select(has(\"name\")) | select(.name == \"peeq-sms\")).version = \"1.2.4\"" ./requirements.yaml
      #     yq eval "(.dependencies[] | select(has(\"name\")) | select(.name == \"${{ inputs.NAME }}\")).version = \"${{ inputs.VERSION }}\"" -i ./requirements.yaml

      # - name: "Create PR"
      #   run: |
      #     gh pr create --label "approved" --title "chore: bump ${{ inputs.NAME }} to ${{ inputs.VERSION }}"
