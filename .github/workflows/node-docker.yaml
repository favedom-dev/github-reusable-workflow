name: Node and Docker

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      NAME:  # name of service, (ex: peeq-tracking)
        required: true
        type: string
      VERSION:
        required: true
        type: string
      HELM_REPO:
        default: 'https://charts.helm.sh/stable'
        required: false
        type: string
      NODE_VERSION:
        default: 20
        required: false
        type: number
      UPLOAD_GS:
        default: false
        required: false
        type: boolean
      GS_BUCKET:
        default: 'peeq-public-assets.joinpeeq.com'
        required: false
        type: string
      DOCKERFILE_FILE:
        default: './Dockerfile'
        required: false
        type: string
      DOCKER_CONTEXT:
        default: '.'
        required: false
        type: string
      TAG2:
        default: 'latest'
        required: false
        type: string
      PROJECT_ID:
        default: 'favedom-dev'
        required: false
        type: string
      GAR_LOCATION:
        default: 'us-central1'
        required: false
        type: string
      DOCKER_REGISTRY:
        default: 'peeq-docker'
        required: false
        type: string
      INSTALL:
        default: true
        required: false
        type: boolean
      INSTALL_NAME:
        default: 'NPM install'
        required: false
        type: string
      INSTALL_CMD:
        default: 'npm install --legacy-peer-deps'
        required: false
        type: string
      TEST:
        default: true
        required: false
        type: boolean
      TEST_NAME:
        default: 'NPM test'
        required: false
        type: string
      TEST_CMD:
        default: 'npm test'
        required: false
        type: string
      BUILD:
        default: true
        required: false
        type: boolean
      BUILD_NAME:
        default: 'NPM build'
        required: false
        type: string
      BUILD_CMD:
        default: 'npm run build'
        required: false
        type: string

    secrets:
      GH_TOKEN:  # GitHub token
        required: true
      NPM_TOKEN:
        required: true
      WIF_PROVIDER:  # Workload Identity Federation Provider
        required: true
      WIF_SERVICE_ACCOUNT:  # Workload Identity Federation Service Account
        required: true

jobs:

  node-docker:
    timeout-minutes: 15
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:

      - name: "🔧 Setup variables"
        id: setup-variables
        run: |
          DOCKER_LOCATION=${{ inputs.GAR_LOCATION }}-docker.pkg.dev/${{ inputs.PROJECT_ID }}/${{ inputs.DOCKER_REGISTRY }}/${{ inputs.NAME }}
          echo "DOCKER_LOCATION : ${DOCKER_LOCATION}"
          echo "DOCKER_LOCATION=${DOCKER_LOCATION}" >> $GITHUB_ENV
          echo "DOCKER_LOCATION=${DOCKER_LOCATION}" >> $GITHUB_OUTPUT
          DOCKER_URL="https://console.cloud.google.com/artifacts/docker/${{ inputs.PROJECT_ID }}/${{ inputs.GAR_LOCATION }}/${{ inputs.DOCKER_REGISTRY }}/${{ inputs.NAME }}?project=${{ inputs.PROJECT_ID }}/"
          echo "DOCKER_URL : ${DOCKER_URL}"
          echo "DOCKER_URL=${DOCKER_URL}" >> $GITHUB_ENV
          echo "DOCKER_URL=${DOCKER_URL}" >> $GITHUB_OUTPUT

      - name: "☁️ Checkout repository"
        uses: actions/checkout@v4

      - name: "🔧 Google Auth Token"
        if: ${{ !env.ACT }}
        id: auth-gcp-token
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: "🔧 Docker Auth"
        if: ${{ !env.ACT }}
        id: auth-docker
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth-gcp-token.outputs.access_token }}'
          registry: '${{ inputs.GAR_LOCATION }}-docker.pkg.dev'  # Google Artifact Registry

      - name: "🔧 Setup node.js version: ${{ inputs.NODE_VERSION }}"
        # https://github.com/actions/setup-node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.NODE_VERSION }}
          cache: npm

      - name: "📦 Cache node_modules"
        id: cache-node-modules
        # https://github.com/actions/cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.cache-name }}
            ${{ runner.os }}-node-
            ${{ runner.os }}-

      - name: "📝 List the state of node modules"
        continue-on-error: true
        run: npm list

      - name: "🔧 Setup DEPLOY_URL"
        id: set-deploy-url
        if: inputs.UPLOAD_GS == true
        run: |
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            DEPLOY_URL="https://${{ inputs.GS_BUCKET }}/${{ inputs.NAME}}/${{ inputs.VERSION }}/"
            echo "RELEASE DEPLOY_URL: ${DEPLOY_URL}"
          else
            DEPLOY_URL="./"
            echo "PR DEPLOY_URL: ${DEPLOY_URL}"
          fi
          echo "DEPLOY_URL: ${DEPLOY_URL}"
          echo ${DEPLOY_URL} > DEPLOY_URL
          echo "deploy-url=${DEPLOY_URL}" >> $GITHUB_OUTPUT

      - name: "🔧 Update base Url"
        if: inputs.UPLOAD_GS == true
        run: sed -i "s/++DEPLOY_URL++/$(sed -e 's/\//\\\//g' DEPLOY_URL)/g" ./docker/environment.tpl.json

      # - name: "🔧 helm init"
      #   run: |
      #     helm init --client-only --stable-repo-url ${{ inputs.HELM_REPO }}

      - name: "🔧 Setup .npmrc"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      - name: "🔨 ${{ inputs.INSTALL_NAME }}"
        if: inputs.INSTALL == true
        run: ${{ inputs.INSTALL_CMD }}

      - name: "🔨 ${{ inputs.TEST_NAME }}"
        if: inputs.TEST == true
        run: ${{ inputs.TEST_CMD }}

      - name: "🔨 ${{ inputs.BUILD_NAME }}"
        if: inputs.BUILD == true
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: ${{ inputs.BUILD_CMD }}

      # https://github.com/google-github-actions/upload-cloud-storage
      - name: "⬆️ Release: Upload to Google Storage"
        if: github.event_name != 'pull_request' && inputs.UPLOAD_GS == true
        id: 'upload-folder'
        uses: 'google-github-actions/upload-cloud-storage@v0'
        with:
          path: 'dist/${{ inputs.NAME }}'
          destination: '${{ inputs.GS_BUCKET }}/${{ inputs.NAME }}/${{ inputs.VERSION }}'
          parent: false

      - name: "🔧 Setup Docker tags"
        id: docker-tags
        env:
          # DOCKER_LOCATION: ${{ inputs.GAR_LOCATION }}-docker.pkg.dev/${{ inputs.PROJECT_ID }}/${{ inputs.DOCKER_REGISTRY }}/${{ inputs.NAME }}
          DOCKER_LOCATION: ${{ steps.setup-variables.outputs.DOCKER_LOCATION }}
        run: |-
          DOCKER_TAGS=${{ env.DOCKER_LOCATION }}:${{ inputs.VERSION }}
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            DOCKER_TAGS=$DOCKER_TAGS,${{ env.DOCKER_LOCATION }}:latest
            # echo "IF: DOCKER_TAGS: $DOCKER_TAGS"
          fi
          echo "DOCKER_TAGS: $DOCKER_TAGS"
          echo "tags=$DOCKER_TAGS" >> $GITHUB_OUTPUT

      - name: "🐳 Docker: build, tag, and push"
        # https://github.com/docker/build-push-action
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.DOCKER_CONTEXT }}
          file: ${{ env.DOCKERFILE_FILE }}
          push: true
          tags: ${{ steps.docker-tags.outputs.tags }}

      - name: "🌐 Link to Container"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          DOCKER_URL: ${{ steps.setup-variables.outputs.DOCKER_URL }}
# yamllint disable rule:line-length
        run: |-
          echo "${DOCKER_URL}"
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            gh pr comment ${{ github.event.number }} \
            --body "🐳 Container: [${{ inputs.NAME }} ${{ inputs.VERSION }}](${DOCKER_URL})"
          fi
# yamllint enable rule:line-length
