name: Helm Charts

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      NAME:  # name of service, (ex: peeq-tracking)
        required: true
        type: string
      VERSION:
        required: true
        type: string
      CLUSTER_NAME:
        default: 'favedom-dev'
        required: false
        type: string
      PROJECT_ID:
        default: 'favedom-dev'
        required: false
        type: string
      LOCATION:
        default: 'us-central1-a'
        required: false
        type: string
      HELM_VERSION:
        default: 'v3.7.2'
        required: false
        type: string
      CHARTMUSEUM_USER:
        default: 'admin'
        required: false
        type: string
      HELM_DOCKER_REGISTRY:
        default: 'us-central1-docker.pkg.dev'  # GAR (oci://)
        # default: 'gcr.io'  # JX
        required: false
        type: string
      HELM_REGISTRY_NAME:
        default: 'peeq-helm'
        required: false
        type: string

    secrets:
      GH_TOKEN:  # GitHub token
        required: true
      WIF_PROVIDER:  # Workload Identity Federation Provider
        required: true
      WIF_SERVICE_ACCOUNT:  # Workload Identity Federation Service Account
        required: true
      CHARTMUSEUM_PASSWORD:  # JX
        required: true

jobs:

  helm-charts:
    timeout-minutes: 10
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:

      - name: "‚òÅÔ∏è Checkout repository"
        uses: actions/checkout@v3

      - name: "üîß Google Auth"
        if: ${{ !env.ACT }}
        id: auth-gcp
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: "üîß GKE credentials"
        id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v0'
        with:
          cluster_name: ${{ inputs.CLUSTER_NAME }}
          location: ${{ inputs.LOCATION }}

      - name: "üîß Setup helm"
        uses: azure/setup-helm@v3
        with:
          version: ${{ inputs.HELM_VERSION }}
        id: install-helm

      - name: "‚ò∏ [JX]: Port forward - chartmuseum"
        run: |
          kubectl -n jx port-forward svc/jenkins-x-chartmuseum 8080:8080 &
          # need to wait to make sure a connection can be made
          sleep 1

      - name: "üîß [GAR] (oci://): Helm login"
        working-directory: ${{ steps.set-charts-dir.outputs.CHARTS_DIR }}
        # if: inputs.IS_HELM_GAR_REPO == true
        env:
          HELM_DOCKER_REGISTRY: ${{ inputs.HELM_DOCKER_REGISTRY }}
          HELM_REGISTRY_NAME: ${{ inputs.HELM_REGISTRY_NAME }}
          HELM_EXPERIMENTAL_OCI: 1
        run: |
          gcloud auth print-access-token | \
          helm registry login -u oauth2accesstoken \
          --password-stdin https://${HELM_DOCKER_REGISTRY}

      - name: "Makefile Build"
        run: make build

      - name: "PREVIEW: Makefile preview"
        if: github.ref != 'refs/heads/master'
        env:
          NAME: ${{ inputs.NAME }}
          VERSION: ${{ inputs.VERSION }}
          CHARTMUSEUM_USER: ${{ inputs.CHARTMUSEUM_USER }}
          CHARTMUSEUM_PASSWORD: ${{ secrets.CHARTMUSEUM_PASSWORD }}
        run: make preview

      - name: "RELEASE: Makefile release"
        if: github.ref == 'refs/heads/master'
        env:
          NAME: ${{ inputs.NAME }}
          VERSION: ${{ inputs.VERSION }}
          CHARTMUSEUM_USER: ${{ inputs.CHARTMUSEUM_USER }}
          CHARTMUSEUM_PASSWORD: ${{ secrets.CHARTMUSEUM_PASSWORD }}
        run: make release

      - name: "‚ò∏ RELEASE [GAR]: Upload helm chart to ocr://"
        # if: github.ref == 'refs/heads/master' && inputs.IS_HELM_GAR_REPO == true
        if: github.ref == 'refs/heads/master'
        working-directory: ${{ steps.set-charts-dir.outputs.CHARTS_DIR }}
        env:
          APP_NAME: ${{ inputs.NAME }}
          VERSION: ${{ inputs.VERSION }}
          HELM_EXPERIMENTAL_OCI: 1  # needed for oci://
          HELM_DOCKER_REGISTRY: ${{ inputs.HELM_DOCKER_REGISTRY }}
          HELM_REGISTRY_NAME: ${{ inputs.HELM_REGISTRY_NAME }}
          PROJECT_ID: ${{ inputs.PROJECT_ID }}
# yamllint disable
        run: |
          helm push \
          ${APP_NAME}-${VERSION}.tgz \
          oci://${HELM_DOCKER_REGISTRY}/${PROJECT_ID}/${HELM_REGISTRY_NAME}/${APP_NAME} \
          ${HELM_DEBUG_FLAG}
# yamllint enable