name: Preview Container Cleanup

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      NAME:  # name of service, (ex: peeq-tracking)
        required: true
        type: string
      # https://github.com/orgs/community/discussions/27071
      # https://github.com/GuillaumeFalourd/poc-github-actions/blob/main/.github/workflows/38-get-pr-number-on-push-event.yml
      # PR_VERSION:
      #   required: true
      #   type: string
      PR_PREFIX:
        default: '0.0.0-SNAPSHOT-PR-'
        required: false
        type: string
      PROJECT_ID:
        default: 'favedom-dev'
        required: false
        type: string
      GAR_LOCATION:
        default: 'us-central1'
        required: false
        type: string
      DOCKER_REGISTRY:
        default: 'peeq-docker'
        required: false
        type: string
      CREATE_CREDENTIALS_FILE:
        default: true
        required: false
        type: boolean
      EXPORT_ENVIRONMENT_VARIABLES:
        default: true
        required: false
        type: boolean

    secrets:
      # GH_TOKEN:
      #   required: false
      WIF_PROVIDER:  # Workload Identity Federation Provider
        required: false
      WIF_SERVICE_ACCOUNT:  # Workload Identity Federation Service Account
        required: false

jobs:

  container-cleanup:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:

      - name: "GITHUB INFO"
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: |-
          echo "PR number          : ${{ github.event.pull_request.number }}"
          echo "github.event_name  : ${{ github.event_name }}"
          echo "github.run_attempt : ${{ github.run_attempt }}"
          echo "github.run_number  : ${{ github.run_number }}"
          echo "github.sha         : ${{ github.sha }}"
          echo "--------------------------------------"
          echo "GITHUB_CONTEXT: ${GITHUB_CONTEXT}"

      # START: GET PR NUMBER
      # https://github.com/GuillaumeFalourd/poc-github-actions/blob/main/.github/workflows/38-get-pr-number-on-push-event.yml
      # - uses: actions/checkout@v2.3.4
      # - uses: actions/checkout@v3
      #   with:
      #     fetch-depth: 0
      # - name: Get Pull Request Number
      #   id: pr
      #   run: echo "::set-output name=pull_request_number::$(gh pr view --json number -q .number || echo "")"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - run: echo ${{ steps.pr.outputs.pull_request_number }}
      # - name: test pr
      #   env:
      #     GH_TOKEN: ${{ github.token }}
      #     PR_NUM: ${{ github.event.pull_request.number }}
      #     # GH_TOKEN: ${{ secrets.GH_TOKEN }}
      #   run: |
      #     gh pr list -s all --search ${{ github.sha }} --json number
      #     # echo "==="
      #     gh pr list -s all --search ${{ github.sha }} --json number -q .[0].number

      # END: GET PR NUMBER

      - name: "ðŸ”§ Setup variables"
        id: setup-variables
        run: |
          PR_VERSION="${PR_PREFIX}"${{ github.event.pull_request.number }}
          echo "PR_VERSION=${PR_VERSION}" >> $GITHUB_ENV
          echo "PR_VERSION=${PR_VERSION}" >> $GITHUB_OUTPUT
          # ===
          GAR=${{ inputs.GAR_LOCATION }}-docker.pkg.dev
          echo "GAR=${GAR}" >> $GITHUB_ENV
          echo "GAR=${GAR}" >> $GITHUB_OUTPUT
          # ===
          DOCKER_LOCATION=${GAR}/${{ inputs.PROJECT_ID }}/${{ inputs.DOCKER_REGISTRY }}/${{ inputs.NAME }}
          # DOCKER_LOCATION=${{ inputs.GAR_LOCATION }}-docker.pkg.dev/${{ inputs.PROJECT_ID }}/${{ inputs.DOCKER_REGISTRY }}/${{ inputs.NAME }}
          echo "DOCKER_LOCATION=${DOCKER_LOCATION}" >> $GITHUB_ENV
          echo "DOCKER_LOCATION=${DOCKER_LOCATION}" >> $GITHUB_OUTPUT
          # ===
          DOCKER_URL="https://console.cloud.google.com/artifacts/docker/${{ inputs.PROJECT_ID }}/${{ inputs.GAR_LOCATION }}/${{ inputs.DOCKER_REGISTRY }}/${{ inputs.NAME }}?project=${{ inputs.PROJECT_ID }}/"
          echo "DOCKER_URL=${DOCKER_URL}" >> $GITHUB_ENV
          echo "DOCKER_URL=${DOCKER_URL}" >> $GITHUB_OUTPUT
          # ===
          DOCKER_TAG=${DOCKER_LOCATION}:${PR_VERSION}
          # DOCKER_TAG=${DOCKER_LOCATION}:${{ inputs.PR_VERSION }}
          echo "DOCKER_TAG=${DOCKER_TAG}" >> $GITHUB_ENV
          echo "DOCKER_TAG=${DOCKER_TAG}" >> $GITHUB_OUTPUT
          echo "================="
          echo "GAR             : ${GAR}"
          echo "PR_VERSION      : ${PR_VERSION}"
          echo "DOCKER_LOCATION : ${DOCKER_LOCATION}"
          echo "DOCKER_URL      : ${DOCKER_URL}"
          echo "DOCKER_TAG      : ${DOCKER_TAG}"

      # https://velocityz.atlassian.net/browse/FAN-3674
      - name: "ðŸ”§ Google Auth Token"
        id: auth-gcp-token
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'
          create_credentials_file: ${{ inputs.CREATE_CREDENTIALS_FILE }}
          export_environment_variables: ${{ inputs.EXPORT_ENVIRONMENT_VARIABLES }}

      - name: "ðŸ”§ Docker Auth: GAR"
        id: auth-docker
        uses: 'docker/login-action@v2'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth-gcp-token.outputs.access_token }}'
          registry: '${GAR}'

      # https://github.com/google-github-actions/setup-gcloud
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: 'Use gcloud CLI'
        run: |
          gcloud info
          gcloud artifacts docker tags list "${DOCKER_LOCATION}" | grep "${PR_VERSION}" | cut -f1 -d ' '

      - name: Delete image
        run: |
          echo "TODO: delete image"
          for i in $( gcloud artifacts docker tags list ${DOCKER_REPO} | grep "${DOCKER_TAG}" | cut -f1 -d ' '); do
            echo "${DOCKER_REPO}:${i}"
            # gcloud artifacts docker images delete "${DOCKER_REPO}":"${i}" --delete-tags --quiet
            echo "EXAMPLE: gcloud artifacts docker images delete ${DOCKER_REPO}:${i} --delete-tags --quiet"
          done


# gcloud container images list --project=favedom-dev
# gcloud artifacts packages list --project=favedom-dev --repository=peeq-docker --location=us-central1

# To delete image busy-box in us-west1 and all of its digests and tags:
# gcloud artifacts docker images delete

# To list tags for image busy-box in us-west1:
# gcloud artifacts docker tags list
# gcloud artifacts docker tags list --project=favedom-dev us-central1-docker.pkg.dev/favedom-dev/peeq-docker/peeq-mono-web-vtnil
# gcloud artifacts docker tags list us-central1-docker.pkg.dev/favedom-dev/peeq-docker/peeq-mono-web-vtnil
# gcloud artifacts docker tags list us-central1-docker.pkg.dev/favedom-dev/peeq-docker/peeq-mono-web-vtnil:0.0.0-SNAPSHOT-PR-1246-3087-1


#### REFER TO THESE BELOW
# gcloud artifacts docker tags list us-central1-docker.pkg.dev/favedom-dev/peeq-docker/peeq-mono-web-vtnil | grep 0.0.0-SNAPSHOT-PR-1246

# gcloud artifacts docker tags list us-central1-docker.pkg.dev/favedom-dev/peeq-docker/peeq-mono-web-vtnil | grep 0.0.0-SNAPSHOT-PR-1246 | cut -f1 -d ' '

# DOCKER_REPO="us-central1-docker.pkg.dev/favedom-dev/peeq-docker/peeq-mono-web-vtnil"
# for i in $( gcloud artifacts docker tags list ${DOCKER_REPO} | grep 0.0.0-SNAPSHOT-PR-1246 | cut -f1 -d ' '); do
#   echo "${DOCKER_REPO}:${i}"
#   gcloud artifacts docker images delete "${DOCKER_REPO}":"${i}" --delete-tags --quiet
# done

