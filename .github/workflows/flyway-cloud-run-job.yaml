
name: Flyway Cloud Run Job

on:
  workflow_call:
    inputs:
      JOB_NAME:
        required: true
        type: string
      REGION:
        required: true
        type: string
      CLOUDSQL_INSTANCES:
        required: true
        type: string
      CLOUD_SQL_CONNECTION_NAME:
        required: true
        type: string
      DB_DRIVER:
        required: true
        type: string
      DB_HOST:
        required: true
        type: string
      DB_PORT:
        required: true
        type: string
      DB_NAME:
        required: true
        type: string
      DB_USER:
        required: true
        type: string
      DB_PASSWORD:
        required: true
        type: string
      SQL_PROXY_KEY:
        required: true
        type: string
    secrets:
      WIF_PROVIDER:
        required: true
      WIF_SERVICE_ACCOUNT:
        required: true

jobs:
  deploy:
    if: ${{ !env.ACT }}
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    env:
      JOB_NAME: staging-peeq-tracking-db
      REGION: europe-west9
      CLOUDSQL_INSTANCES: favedom-dev:us-central1:mysql-peeq-staging
      CLOUD_SQL_CONNECTION_NAME: favedom-dev:us-central1:mysql-peeq-staging
      DB_DRIVER: "jdbc:mysql:"
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_NAME: peeqtrackingdb
      DB_USER: peeqtracking
      DB_PASSWORD: peeq-staging_MYSQL_TRACKING_PASSWORD:latest
      SQL_PROXY_KEY: peeq-staging_SQL_PROXY_KEY:latest
    steps:

      - name: "üîß Google Auth"
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: "üîß Set up Cloud SDK"
        uses: 'google-github-actions/setup-gcloud@v0'

      # - name: 'Use gcloud CLI'
      #   run: 'gcloud info'

      - name: "üîß Install gcloud beta"
        run: gcloud components install beta

      - name: "‚ùî Does Cloud Run Job exist"
        id: job-exist
        continue-on-error: true
        run: |-
          gcloud beta run jobs list --filter=${{ env.JOB_NAME }} | cut -f 3 -d ' ' | grep ^${{ env.JOB_NAME }}$
          echo "JOB_EXISTS=$?" >> $GITHUB_ENV

      - name: "üì¶ Create Cloud Run Job"
        if: steps.job-exist.outcome == 'failure'
        run: |-
          gcloud beta run jobs create ${{ env.JOB_NAME }} \
          --image ${{ env.GCR_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.NAME }}:latest  \
          --set-cloudsql-instances=${{ env.CLOUDSQL_INSTANCES }} \
          --set-env-vars CLOUD_SQL_CONNECTION_NAME=${{ env.CLOUD_SQL_CONNECTION_NAME }} \
          --set-env-vars DB_DRIVER=${{ env.DB_DRIVER }} \
          --set-env-vars DB_HOST=${{ env.DB_HOST }} \
          --set-env-vars DB_PORT=${{ env.DB_PORT }} \
          --set-env-vars DB_NAME=${{ env.DB_NAME }} \
          --set-env-vars DB_USER=${{ env.DB_USER }} \
          --set-secrets DB_PASSWORD=${{ env.DB_PASSWORD }} \
          --set-secrets SQL_PROXY_KEY=${{ env.SQL_PROXY_KEY }} \
          --command sh \
          --args="-c" \
          --args="./flyway_migrate.sh" \
          --max-retries 1 \
          --region ${{ env.REGION }} \
          --quiet

      - name: "üì¶ Update Cloud Run Job"
        if: steps.job-exist.outcome == 'success'
        run: |-
          gcloud beta run jobs update ${{ env.JOB_NAME }} \
          --image=${{ env.GCR_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.NAME}}:latest \
          --region ${{ env.REGION }}

      # https://console.cloud.google.com/run/jobs/details/europe-west9/staging-peeq-tracking-db/executions?project=favedom-dev
      - name: "üåê Link to Cloud Run Job"
        run: |-
          echo "https://console.cloud.google.com/run/jobs/details/${{ env.REGION }}/${{ env.JOB_NAME }}/executions?project=${{ env.PROJECT_ID }}"

      - name: "üöÄ Execute Cloud Run Job"
        run: |-
          gcloud beta run jobs execute ${{ env.JOB_NAME }} --wait --region ${{ env.REGION }}
