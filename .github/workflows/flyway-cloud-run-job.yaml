name: Flyway Cloud Run Job

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      NAME:  # name of service, (ex: peeq-tracking-db)
        required: true
        type: string
      VERSION:
        default: 'latest'
        required: false
        type: string
      PROJECT_ID:
        default: 'favedom-dev'
        required: false
        type: string
      GAR_LOCATION:
        default: 'us-central1'
        required: false
        type: string
      GCR_LOCATION:
        default: 'gcr.io'
        required: false
        type: string
      DOCKER_REGISTRY:
        default: 'peeq-docker'
        required: false
        type: string
      JOB_NAME:
        required: true
        type: string
      REGION:
        default: 'europe-west9'
        required: false
        type: string
      CLOUDSQL_INSTANCES:
        required: true
        type: string
      CLOUD_SQL_CONNECTION_NAME:
        required: true
        type: string
      DB_DRIVER:
        default: 'jdbc:postgresql:'
        required: false
        type: string
      DB_HOST:
        default: 127.0.0.1
        required: true
        type: string
      DB_PORT:
        default: 5432
        required: false
        type: string
      DB_NAME:
        required: true
        type: string
      DB_USER:
        required: true
        type: string
      DB_PASSWORD:
        required: true
        type: string
      SQL_PROXY_KEY:
        required: true
        type: string
    secrets:
      WIF_PROVIDER:
        required: true
      WIF_SERVICE_ACCOUNT:
        required: true

jobs:
  flyway_deploy:
    timeout-minutes: 10
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:

      - name: "üîß Google Auth Token"
        if: ${{ !env.ACT }}
        id: auth-gcp-token
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: "üîß Set up Cloud SDK"
        uses: 'google-github-actions/setup-gcloud@v0'

      # - name: 'Use gcloud CLI'
      #   run: 'gcloud info'

      - name: "üîß Install gcloud beta"
        run: gcloud components install beta

      - name: "‚ùî Does Cloud Run Job exist"
        id: job-exist
        continue-on-error: true
        run: |-
          gcloud beta run jobs list --filter=${{ inputs.JOB_NAME }} | cut -f 3 -d ' ' | grep ^${{ inputs.JOB_NAME }}$
          echo "JOB_EXISTS=$?" >> $GITHUB_ENV

      - name: "üì¶ Create Cloud Run Job"
        if: steps.job-exist.outcome == 'failure'
        run: |-
          gcloud beta run jobs create ${{ inputs.JOB_NAME }} \
          --image ${{ inputs.GAR_LOCATION }}-docker.pkg.dev/${{ inputs.PROJECT_ID }}/${{ inputs.DOCKER_REGISTRY }}/${{ inputs.NAME }}:${{ inputs.VERSION }}  \
          --set-cloudsql-instances=${{ inputs.CLOUDSQL_INSTANCES }} \
          --set-env-vars CLOUD_SQL_CONNECTION_NAME=${{ inputs.CLOUD_SQL_CONNECTION_NAME }} \
          --set-env-vars DB_DRIVER=${{ inputs.DB_DRIVER }} \
          --set-env-vars DB_HOST=${{ inputs.DB_HOST }} \
          --set-env-vars DB_PORT=${{ inputs.DB_PORT }} \
          --set-env-vars DB_NAME=${{ inputs.DB_NAME }} \
          --set-env-vars DB_USER=${{ inputs.DB_USER }} \
          --set-secrets DB_PASSWORD=${{ inputs.DB_PASSWORD }} \
          --set-secrets SQL_PROXY_KEY=${{ inputs.SQL_PROXY_KEY }} \
          --command sh \
          --args="-c" \
          --args="./flyway_migrate.sh" \
          --max-retries 1 \
          --region ${{ inputs.REGION }} \
          --quiet

      - name: "üì¶ Update Cloud Run Job"
        if: steps.job-exist.outcome == 'success'
        run: |-
          gcloud beta run jobs update ${{ inputs.JOB_NAME }} \
          --image=${{ inputs.GAR_LOCATION }}-docker.pkg.dev/${{ inputs.PROJECT_ID }}/${{ inputs.DOCKER_REGISTRY }}/${{ inputs.NAME }}:${{ inputs.VERSION }} \
          --region ${{ inputs.REGION }}

      # https://console.cloud.google.com/run/jobs/details/europe-west9/staging-peeq-tracking-db/executions?project=favedom-dev
      - name: "üåê Link to Cloud Run Job"
        run: |-
          echo "https://console.cloud.google.com/run/jobs/details/${{ inputs.REGION }}/${{ inputs.JOB_NAME }}/executions?project=${{ inputs.PROJECT_ID }}"

      - name: "üöÄ Execute Cloud Run Job"
        run: |-
          gcloud beta run jobs execute ${{ inputs.JOB_NAME }} --wait --region ${{ inputs.REGION }}
