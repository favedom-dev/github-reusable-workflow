name: Docker

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      NAME:  # name of service, (ex: peeq-tracking-db)
        required: true
        type: string
      VERSION:
        required: true
        type: string
      PROJECT_ID:
        default: 'favedom-dev'
        required: false
        type: string
      GAR_LOCATION:
        default: 'us-central1'
        required: false
        type: string
      GCR_LOCATION:
        default: 'gcr.io'
        required: false
        type: string
      DOCKER_REGISTRY:
        default: 'peeq-docker'
        required: false
        type: string
    secrets:
      GH_TOKEN:
        required: true
      WIF_PROVIDER:  # Workload Identity Federation Provider
        required: true
      WIF_SERVICE_ACCOUNT:  # Workload Identity Federation Service Account
        required: true

jobs:

  docker:
    timeout-minutes: 10
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      DOCKER_BUILDKIT: 1
    steps:

      - name: "üîß Setup variables"
        id: setup-variables
        run: |
          DOCKER_LOCATION=${{ inputs.GAR_LOCATION }}-docker.pkg.dev/${{ inputs.PROJECT_ID }}/${{ inputs.DOCKER_REGISTRY }}/${{ inputs.NAME }}
          echo "DOCKER_LOCATION : ${DOCKER_LOCATION}"
          echo "DOCKER_LOCATION=${DOCKER_LOCATION}" >> $GITHUB_ENV
          echo "DOCKER_LOCATION=${DOCKER_LOCATION}" >> $GITHUB_OUTPUT
          DOCKER_URL="https://console.cloud.google.com/artifacts/docker/${{ inputs.PROJECT_ID }}/${{ inputs.GAR_LOCATION }}/${{ inputs.DOCKER_REGISTRY }}/${{ inputs.NAME }}?project=${{ inputs.PROJECT_ID }}/"
          echo "DOCKER_URL : ${DOCKER_URL}"
          echo "DOCKER_URL=${DOCKER_URL}" >> $GITHUB_ENV
          echo "DOCKER_URL=${DOCKER_URL}" >> $GITHUB_OUTPUT

      - name: "‚òÅÔ∏è Checkout repository"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "üîß Google Auth Token"
        if: ${{ !env.ACT }}
        id: auth-gcp-token
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: "üîß Docker Auth"
        if: ${{ !env.ACT }}
        id: auth-docker
        uses: 'docker/login-action@v2'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth-gcp-token.outputs.access_token }}'
          registry: '${{ inputs.GAR_LOCATION }}-docker.pkg.dev'  # Google Artifact Registry

      # - name: Display Values
      #   if: ${{ env.DEBUG }}
      #   run: |
      #     echo "NAME: ${{ inputs.NAME }}"
      #     echo "VERSION: ${{ inputs.VERSION }}"
      #     echo "PROJECT_ID: ${{ inputs.PROJECT_ID }}"
      #     echo "GAR_LOCATION: ${{ inputs.GAR_LOCATION }}"
      #     echo "GCR_LOCATION: ${{ inputs.GCR_LOCATION }}"
      #     echo "DOCKER_REGISTRY: ${{ inputs.DOCKER_REGISTRY }}"

      - name: "üê≥ Docker: build, tag, and push"
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
# yamllint disable-line
          tags: ${{ steps.setup-variables.outputs.DOCKER_LOCATION }}:${{ inputs.VERSION }},${{ steps.setup-variables.outputs.DOCKER_LOCATION }}:latest

      - name: "üåê Link to Container"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          DOCKER_URL: ${{ steps.setup-variables.outputs.DOCKER_URL }}
# yamllint disable rule:line-length
        run: |-
          echo "${DOCKER_URL}"
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            gh pr comment ${{ github.event.number }} \
            --body "üê≥ Container: [${{ inputs.NAME }} ${{ inputs.VERSION }}](${DOCKER_URL})"
          fi
# yamllint enable rule:line-length
